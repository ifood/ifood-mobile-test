//
//  TimeLineViewController.swift
//  ifood-devtest
//
//  Created by Rafael Zilião on 28/11/18.
//  Copyright (c) 2018 Rafael Zilião. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import TwitterKit

protocol TimeLineDisplayLogic: class {
    func displayTweets(viewModel: TimeLine.Tweets.ViewModel)
}

class TimeLineViewController: TWTRTimelineViewController, TimeLineDisplayLogic {
    var interactor: TimeLineBusinessLogic?
    var router: (NSObjectProtocol & TimeLineRoutingLogic & TimeLineDataPassing)?
    
    private lazy var searchController: UISearchController = {
        let searchController = UISearchController(searchResultsController: nil)
        searchController.searchResultsUpdater = self
        searchController.obscuresBackgroundDuringPresentation = false
        searchController.hidesNavigationBarDuringPresentation = false
        searchController.searchBar.placeholder = "e.g. 'neiltyson'"
        searchController.searchBar.text = "neiltyson"
        return searchController
    }()
   
    // MARK: Setup
  
    private func setup() {
        let viewController = self
        let interactor = TimeLineInteractor()
        let presenter = TimeLinePresenter()
        let router = TimeLineRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    private func setupTwitterKitDelegates() {
        self.tweetViewDelegate = self
        self.timelineDelegate = self
    }
    
    private func setupUI() {
        navigationItem.searchController = searchController
        navigationItem.hidesSearchBarWhenScrolling = true
        definesPresentationContext = true
    }
    
    // MARK: Routing
  
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
  
    // MARK: View lifecycle
  
    override func viewDidLoad() {
        super.viewDidLoad()

        setup()
        setupTwitterKitDelegates()
        setupUI()
        fetchTweets()
    }
  
    // MARK: Fetch data
    
    private func fetchTweets() {
        let request = TimeLine.Tweets.Request(user: "neiltyson")
        interactor?.fetchUserTweets(request: request)
    }
    
    // MARK: Display methods
    
    func displayTweets(viewModel: TimeLine.Tweets.ViewModel) {
        dataSource = viewModel.fetchedTweets
    }
}


extension TimeLineViewController: TWTRTweetViewDelegate {
    func tweetView(_ tweetView: TWTRTweetView, didTap tweet: TWTRTweet) {
        debugPrint("tweet click")
    }
}

extension TimeLineViewController: TWTRTimelineDelegate {
    
}

extension TimeLineViewController : UISearchResultsUpdating {
    
    func updateSearchResults(for searchController: UISearchController) {
        
    }
    
}
