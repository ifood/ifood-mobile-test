//
//  ResultPresenter.swift
//  ifood-mobile-test
//
//  Created by Marcio Garcia on 01/12/18.
//  Copyright (c) 2018 oxltech.com. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ResultPresentationLogic {
    func presentSentiment(response: Result.AnalyzeSentiment.Response)
    func presentError(response: Result.Error.Response)
}

extension UIColor {
    static let happyYellow = UIColor(red: 1, green: 1, blue: 102/255.0, alpha: 1.0)
    static let neutralGray = UIColor(red: 217/255.0, green: 220/255.0, blue: 214/255.0, alpha: 1.0)
    static let sadBlue = UIColor(red: 58/255.0, green: 124/255.0, blue: 165/255.0, alpha: 1.0)
}

class ResultPresenter: ResultPresentationLogic {
    
    weak var viewController: ResultDisplayLogic?

    // MARK: Do something

    func presentSentiment(response: Result.AnalyzeSentiment.Response) {
        
        var tweetSentiment: Result.TweetSentiment!
        
        let score = response.analyzedSentiment.documentSentiment.score
        if score > 0.34 {
            tweetSentiment = Result.TweetSentiment(emojiFace: .happy, viewBackGroundColor: UIColor.happyYellow)
        } else if score < -0.34 {
            tweetSentiment = Result.TweetSentiment(emojiFace: .sad, viewBackGroundColor: UIColor.sadBlue)
        } else {
            tweetSentiment = Result.TweetSentiment(emojiFace: .neutral, viewBackGroundColor: UIColor.neutralGray)
        }
        
        let viewModel = Result.AnalyzeSentiment.ViewModel(tweetSentiment: tweetSentiment)
        viewController?.displaySentiment(viewModel: viewModel)
    }
    
    func presentError(response: Result.Error.Response) {
        let viewModel = Result.Error.ViewModel(code: response.code, message: response.message)
        viewController?.displayError(viewModel: viewModel)
    }
}
