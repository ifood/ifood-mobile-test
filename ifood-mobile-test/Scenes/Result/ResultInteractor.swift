//
//  ResultInteractor.swift
//  ifood-mobile-test
//
//  Created by Marcio Garcia on 01/12/18.
//  Copyright (c) 2018 oxltech.com. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ResultBusinessLogic {
    func analyzeSentiment(request: Result.AnalyzeSentiment.Request)
}

protocol ResultDataStore {
}

class ResultInteractor: ResultBusinessLogic, ResultDataStore {
  
    var presenter: ResultPresentationLogic?
    var worker: ResultWorker?
    
    init(configuration: Configuration) {
        
        let restService = AlamofireWrapper(environment: configuration.environment,
                                           baseUrl: configuration.value(for: .baseUrl),
                                           apiKey: configuration.value(for: .apiKey),
                                           appVersion: configuration.value(for: .appVersion))
        
        let networkService = NetworkService(restService: restService)
        
        worker = ResultWorker(dataService: networkService)
    }
    
    // MARK: Do something

    func analyzeSentiment(request: Result.AnalyzeSentiment.Request) {
        
        worker?.requestSentimentAnalysis(text: request.text, completion: { [weak self] (analyzedSentiment, error) in
            guard let sentiment = analyzedSentiment else {
                return
            }
            let response = Result.AnalyzeSentiment.Response(analyzedSentiment: sentiment)
            self?.presenter?.presentSentiment(response: response)
        })
    }
}
